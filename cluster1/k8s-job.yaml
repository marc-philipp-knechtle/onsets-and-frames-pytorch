apiVersion: batch/v1
kind: Job
metadata:
  name: &jobname onsets-and-frames-pytorch-training-cluster1 # this is an arbitrary name for the local container
spec:
  template:
    spec:
      priorityClassName: research-low
      # tested this node selector, however, after 10 days is was not possible to get a node with rtx2018ti :(
          # I ran this with the research med priority...
          # Therefore it might be required to run this with research-high
          # Todo test if sth. changed after the restart of the cluster...
      # nodeSelector:
      #     gputype: rtx2018ti
      affinity:
          nodeAffinity:
            requiredDuringSchedulingIgnoredDuringExecution:
              nodeSelectorTerms:
              - matchExpressions:
                - key: gputype
                  operator: In
                  values:
                  - gtx1080ti
                  - rtx2018ti
                  # - titan  To avoid node 'ungoliant' because of error msg: Pod The node had condition: [DiskPressure].
                  - rtx8000
                  - a100
      containers:
        - name: *jobname # gets read as "test-job" as it links to the variable definition above
          image: ls6-stud-registry.informatik.uni-wuerzburg.de/extch1-onsets-and-frames-pytorch:0.0.1
          imagePullPolicy: "IfNotPresent"
          env:
              - name: DATADIR
                value: "/workspace/data"
              - name: WORKSPACE
                value: "/workspace"
              - name: NUMBA_CACHE_DIR
                value: "/tmp/numba_cache"
          resources:
            limits: &resources
              nvidia.com/gpu: "1"
              cpu: "16"
              memory: "32Gi"
            requests: *resources # sets requests = limits
          command: ["conda", "run", "-n", "onsets-and-frames-pytorch", "python3", "train.py"]
          volumeMounts:
              - mountPath: /workspace/data # directory IN the container
                name: &ceph_mount_name localdir # matches volume-name from below
              - mountPath: /workspace/runs # directory IN the container
                name: &ceph_runs localdir2 # matches volume-name from below
              - mountPath: /dev/shm # fixes a common pytorch issue. just always mount this here
                name: dshm
      imagePullSecrets:
        - name: lsx-registry
      restartPolicy: "Never"
      volumes:
          - name: *ceph_mount_name # gets evaluated as "localdir"
            cephfs:
                monitors:
                    - 132.187.14.16
                    - 132.187.14.17
                    - 132.187.14.19
                    - 132.187.14.20  # Not important for you, just copy along
                user: extch1  # <namespace>
                path: "/home/ext/ch1/cluster1/data" # The path you want to mount
                secretRef: # The name of the secret for auth. Is always "ceph-secret"
                  name: ceph-secret
          - name: *ceph_runs # gets evaluated as "localdir"
            cephfs:
                monitors:
                    - 132.187.14.16
                    - 132.187.14.17
                    - 132.187.14.19
                    - 132.187.14.20  # Not important for you, just copy along
                user: extch1  # <namespace>
                path: "/home/ext/ch1/cluster1/runs" # The path you want to mount
                secretRef: # The name of the secret for auth. Is always "ceph-secret"
                    name: ceph-secret
          - name: dshm # "needs" to be copied along, see above
            emptyDir:
                medium: "Memory"
  backoffLimit: 0